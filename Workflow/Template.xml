<?xml version="1.0" encoding="utf-8" ?>
<Workflow>
  <SqlQueries>
    <SqlQuery Name="CitySelectSqlQuery">
      <Text>
        select 
          city_id as "CityId",
          title as "Title",
          archive as "Archive"
         from 
          template.city
         order by title;
      </Text>
    </SqlQuery>

    <SqlQuery Name="CityInsertSqlQuery">
      <Text>
        insert into template.city(
          title,
          archive
        )
        values
          (
          {Title},
          {Archive}
          );
      </Text>
    </SqlQuery>

    <SqlQuery Name="CityUpdateSqlQuery">
      <Text>
        update template.city
        set
          title = {Title},
          archive = {Archive}
        where
          city_id = {CityId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="CityDeleteSqlQuery">
      <Text>
        select template.city_try_delete({CityId}::smallint);
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientSelectSqlQuery">
      <Text>
        select
          cl.client_id as "ClientId",
          cl.title as "Name",
          ct.title as "CityTitle",
          cl.phone as "Phone",
          cl.archive as "Archive"
        from
          template.client cl
          left join template.city ct using(city_id)
        order by cl.title
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientByIdSelectSqlQuery">
      <Text>
        Select
          client.title as "Name",
          client.city_id as "CityId",
          client.date_of_birth as "DateOfBirth",
          client.email as "Email",
          client.phone as "Phone" 
        from
          template.client
        where client.client_id = {ClientId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientInsertSqlQuery">
      <Text>
        insert into template.client(
          city_id,
          date_of_birth,
          title,
          email,
          phone
        )
        values(
          {CityId},
          {DateOfBirth},
          {Name},
          {Email},
          {Phone}
        )
        returning client_id;
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientUpdateSqlQuery">
      <Text>
        update template.client
        set
          city_id = {CityId},
          date_of_birth = {DateOfBirth},
          title = {Name},
          email = {Email},
          phone = {Phone}
        where
          client_id = {ClientId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientDeleteSqlQuery">
      <Text>
        select template.client_try_delete({ClientId}::bigint);
      </Text>
    </SqlQuery>

    <SqlQuery Name="CityShortSelectSqlQuery">
      <Text>
        SELECT
          city.city_id AS "CityId",
          city.title AS "Title"
        FROM
          template.city
        where
          not city.archive or
          city.city_id = {CityId}
        ORDER BY city.title;
      </Text>
    </SqlQuery>

    <SqlQuery Name="OrderSelectSqlQuery">
      <Text>
    WITH _filter AS (
      SELECT
        CASE
          WHEN {Filter} = 'Today'
          THEN CURRENT_DATE::timestamp
          WHEN {Filter} = 'CurrentWeek'
          THEN date_trunc('week', CURRENT_DATE::timestamp)
          WHEN {Filter} = 'Fortnight'
          THEN date_trunc('week', CURRENT_DATE::timestamp) - interval '7d'
          WHEN {Filter} = 'Period'
          THEN {StartDate}::timestamp
        END AS start_date,
    
        CASE
          WHEN {Filter} = 'Today'
          THEN CURRENT_DATE + interval '1d - 1s'
          WHEN {Filter} = 'CurrentWeek'
          THEN date_trunc('week', CURRENT_DATE::timestamp) + interval '7d - 1s'
          WHEN {Filter} = 'Fortnight'
          THEN date_trunc('week', CURRENT_DATE::timestamp) + interval '7d - 1s'
          WHEN {Filter} = 'Period'
          THEN {EndDate}::timestamp + interval '1d - 1s'
        END AS end_date
    )  select 
		  ord.order_id as "OrderId",
		  ord.client_id as "ClientId",
		  ord.order_number as "OrderNumber",
		  ord.order_date as "OrderDate",
		  ord.description as "OrderDescription",
		  client.city_id as "CityId"
  
		from template.order ord
		left join template.client on client.client_id = ord.client_id
        left join _filter on true
        where not ord.deleted and
        ord.order_date between _filter.start_date and _filter.end_date;
      </Text>
    </SqlQuery>

    <SqlQuery Name="OrderInsertSqlQuery">
      <Text>
        insert into template.order
          (order_number, order_date, description, client_id) values
          ({OrderNumber}, {OrderDate}, {OrderDescription}, {ClientId}) 
        returning order_id;
      </Text>
    </SqlQuery>

    <SqlQuery Name="OrderUpdateSqlQuery">
      <Text>
				update  template.order set
				  client_id = {ClientId},
				  order_number = {OrderNumber},
				  order_date = {OrderDate}, 
				  description = {OrderDescription}
				where order_id = {OrderId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="OrderDeleteSqlQuery">
      <Text>
        update template.order set
          deleted = True,
          date_deleted = now()
        where order_id = {OrderId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="OrderSelectByIdSqlQuery">
      <Text>
        SELECT 
          client_id as "ClientId",
          order_number as "OrderNumber", 
          order_date as "OrderDate", 
          description as "OrderDescription"
        FROM
         template."order"
        where
          order_id = {OrderId};
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientShortSelectSqlQuery">
      <Text>
        SELECT
          client.client_id AS "ClientId",
          client.title AS "ClientTitle",
          client.phone as "ClientPhone",
          city.title as "CityTitle"
        FROM
          template.client
          join template.city using (city_id)
        where
          not client.archive or
          client.client_id = {ClientId}
        ORDER BY client.title;
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientSimpleSqlQuery">
      <Text>
        select
          client.client_id as "ClientId",
          client.title as "ClientTitle"
        from template.client
      </Text>
    </SqlQuery>

    <SqlQuery Name="CitySimpleSqlQuery">
      <Text>
        select
	        city.city_id as "CityId",
	        city.title as "CityTitle"
        from template.city
      </Text>
    </SqlQuery>

    <SqlQuery Name="ClientArchiveSqlQuery">
      <Text>
        update template.client
          set archive = not archive where client_id = {ClientId};
      </Text>
    </SqlQuery>


  </SqlQueries>

  <Permissions>
    <Permission Name="CityViewSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="CitySelectSqlQuery" />
        <SqlQuery Name="CityShortSelectSqlQuery" />
      </SqlQueries>
    </Permission>
    <Permission Name="CityEditSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="CityInsertSqlQuery" />
        <SqlQuery Name="CityUpdateSqlQuery" />
        <SqlQuery Name="CityDeleteSqlQuery" />
      </SqlQueries>
    </Permission>

    <Permission Name="ClientViewSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="ClientSelectSqlQuery" />
        <SqlQuery Name="ClientByIdSelectSqlQuery" />
      </SqlQueries>
    </Permission>
    <Permission Name="ClientEditSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="ClientInsertSqlQuery" />
        <SqlQuery Name="ClientUpdateSqlQuery" />
        <SqlQuery Name="ClientDeleteSqlQuery" />
        <SqlQuery Name="ClientArchiveSqlQuery" />
      </SqlQueries>
    </Permission>

    <Permission Name="OrderViewSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="OrderSelectSqlQuery" />
        <SqlQuery Name="OrderSelectByIdSqlQuery" />
        <SqlQuery Name="CitySimpleSqlQuery" />
        <SqlQuery Name="ClientShortSelectSqlQuery" />
        <SqlQuery Name="ClientSimpleSqlQuery" />
      </SqlQueries>
    </Permission>

    <Permission Name="OrderEditSqlQueryPermission" Type="SqlQueryPermission">
      <SqlQueries>
        <SqlQuery Name="OrderInsertSqlQuery" />
        <SqlQuery Name="OrderUpdateSqlQuery" />
        <SqlQuery Name="OrderDeleteSqlQuery" />
      </SqlQueries>
    </Permission>

  </Permissions>

  <Roles>
    <Role Name="CityViewRole">
      <Permissions>
        <Permission Name="CityViewSqlQueryPermission" />
      </Permissions>
    </Role>
    <Role Name="CityEditRole">
      <Permissions>
        <Permission Name="CityViewSqlQueryPermission" />
        <Permission Name="CityEditSqlQueryPermission" />
      </Permissions>
    </Role>

    <Role Name="ClientViewRole">
      <Permissions>
        <Permission Name="ClientViewSqlQueryPermission" />
      </Permissions>
    </Role>
    <Role Name="ClientEditRole">
      <Permissions>
        <Permission Name="ClientEditSqlQueryPermission" />
        <Permission Name="ClientViewSqlQueryPermission" />
      </Permissions>
    </Role>

    <Role Name="OrderViewRole">
      <Permissions>
        <Permission Name="OrderViewSqlQueryPermission" />
      </Permissions>
    </Role>
    <Role Name="OrderEditRole">
      <Permissions>
        <Permission Name="OrderEditSqlQueryPermission" />
        <Permission Name="OrderViewSqlQueryPermission" />
      </Permissions>
    </Role>
  </Roles>

  <Groups>
    <Group Name="GuestGroup">
      <Roles>
        <Role Name="CityEditRole" />
        <Role Name="ClientEditRole" />
        <Role Name="OrderEditRole" />
      </Roles>
    </Group>
  </Groups>
</Workflow>